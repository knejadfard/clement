language: cpp
matrix:
  include:
    - os: linux
      dist: bionic
      compiler: clang
      addons:
        apt:
          update: true
          sources:
            - sourceline: 'deb https://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-10
            - libc++1-10
            - libc++-10-dev
            - libc++abi-10-dev
            - libunwind-dev
            - liblzma-dev
      env:
        - BOOST_VERSION=1.72.0
        - MATRIX_EVAL="CC=/usr/bin/clang-10 CXX=/usr/bin/clang++-10"
        - TOOLSET=clang
        - CMAKE_OPTS="-DCODE_COVERAGE=ON -DBUILD_DOC=OFF"
        - LFLAGS="-stdlib=libc++ -lc++abi"
        - CXXFLAGS="-stdlib=libc++ -std=c++17"
    - os: linux
      dist: bionic
      compiler: gcc
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
      env:
        - BOOST_VERSION=1.72.0
        - MATRIX_EVAL="CC=gcc-9 CXX=g++-9"
        - TOOLSET=gcc
        - CMAKE_OPTS="-DCODE_COVERAGE=OFF -DBUILD_DOC=OFF"
        - LFLAGS=" "
        - CXXFLAGS="-std=c++17"
before_install:
  - eval "${MATRIX_EVAL}"
install:
  - mkdir "${HOME}/toolset-bin"
  - |
    if [[ $TOOLSET -eq gcc ]]; then
      ln -s /usr/bin/gcc-9 "${HOME}/toolset-bin/llvm-cov"
      ln -s /usr/bin/llvm-profdata-10 "${HOME}/toolset-bin/llvm-profdata"
      export PATH="${HOME}/toolset-bin:$PATH"
    fi
  - |
    if [[ $TOOLSET -eq clang ]]; then
      ln -s /usr/bin/llvm-cov-10 "${HOME}/toolset-bin/llvm-cov"
      ln -s /usr/bin/llvm-profdata-10 "${HOME}/toolset-bin/llvm-profdata"
      export PATH="${HOME}/toolset-bin:$PATH"
      ${HOME}/toolset-bin/llvm-profdata merge --version
      llvm-profdata merge --version
    fi

  ############################################################################
  # All the dependencies are installed in ${HOME}/deps/
  ############################################################################
  - DEPS_DIR="${HOME}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  ############################################################################
  # Compile and install Boost libraries
  ############################################################################
  - |
    BOOST_SRC_DIR=${DEPS_DIR}/boost-${BOOST_VERSION}-source
    BOOST_DIR=${DEPS_DIR}/boost-${BOOST_VERSION}
    if [[ "${BOOST_VERSION}" != "" ]]; then
      if [[ "${BOOST_VERSION}" == "trunk" ]]; then
        BOOST_URL="http://github.com/boostorg/boost.git"
        travis_retry git clone --depth 1 --recursive ${BOOST_URL} ${BOOST_SRC_DIR} || exit 1
        (cd ${BOOST_SRC_DIR} && ./bootstrap.sh && ./b2 headers) || exit 1
      else
        BOOST_URL="https://dl.bintray.com/boostorg/release/${BOOST_VERSION}/source/boost_${BOOST_VERSION//\./_}.tar.gz"
        mkdir -p ${BOOST_SRC_DIR}
        { travis_retry wget -O - ${BOOST_URL} | tar --strip-components=1 -xz -C ${BOOST_SRC_DIR}; } || exit 1
      fi
      CMAKE_OPTIONS+=" -DBOOST_ROOT=${BOOST_DIR}"
    fi
  - cd ${BOOST_SRC_DIR}/tools/build
  - ./bootstrap.sh --with-toolset=${TOOLSET} || (cat bootstrap.log && exit 1)
  - ./b2 toolset=${TOOLSET} install --prefix=${DEPS_DIR}/b2
  - export PATH=${DEPS_DIR}/b2/bin:${PATH}
  - b2 --version || true # b2 --version returns 1
  - cd ${BOOST_SRC_DIR}
  - b2 toolset=${TOOLSET} link=static cxxflags="${CXXFLAGS}" linkflags="${LFLAGS}" -j 4 --with-system --with-filesystem --with-log --with-thread --prefix=${BOOST_DIR} install

  ############################################################################
  # Install a recent CMake
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.10/cmake-3.10.0-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake || brew upgrade cmake
    fi
  - cmake --version
before_script:
  - echo $PATH
  - ${HOME}/toolset-bin/llvm-profdata merge --version
  - ${CXX} -v
  - llvm-profdata merge --version
script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir build && cd build
  - cmake ${CMAKE_OPTS} -DBOOST_ROOT=${BOOST_DIR} ../
  - make
  - cd ${TRAVIS_BUILD_DIR}/build/test
after_success:
  - cd ${TRAVIS_BUILD_DIR}/build
  - make ccov-lcov-all_tests
  - bash <(curl -s https://codecov.io/bash) -f ccov/all_tests.lcov || echo "Codecov did not collect coverage report"
